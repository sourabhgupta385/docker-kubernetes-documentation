Pre-requisites:
    Open the required ports. To know which ports to open, visit below link:
      https://kubernetes.io/docs/setup/independent/install-kubeadm/#check-required-ports

INSTALLING DOCKER:

    sudo -i
    apt-get update
    apt-get install apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt-get update
    apt-get install docker-ce
    usermod -aG docker ubuntu

INSTALLING KUBERNETES:

    apt-get update && apt-get install -y apt-transport-https curl      
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
    deb https://apt.kubernetes.io/ kubernetes-xenial main
    EOF
    apt-get update
    apt-get install -y kubelet kubeadm kubectl
    apt-mark hold kubelet kubeadm kubectl
    systemctl daemon-reload
    systemctl restart kubelet 
                    
To join to master, note the output from previous command something like below,
OUTPUT_1: 

    To start using your cluster, you need to run the following as a regular user:

        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

        You should now deploy a pod network to the cluster.
        Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
        https://kubernetes.io/docs/concepts/cluster-administration/addons/

        You can now join any number of machines by running the following on each node
        as root:

        <kubeadm join command>

Exit from root by running following command:
  
    exit

Run below commands which we got in OUTPUT_1:
  
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

To apply a network(Weavenet) to a cluster, run the following command:

    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

To make master also as working node, run the following command: 

    kubectl taint nodes --all node-role.kubernetes.io/master-

Create another ubuntu instance and login with putty, then follow the Node file instructions

To check which nodes are connected, run the following command:

    kubectl get nodes

To get the browser based dashboard, run the following command:

    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

To expose dashboard to outside world:

    kubectl apply -f dashboard-admin.yaml
      
    Note - Content of dashboard-admin.yaml file can be found at: https://github.com/akilans/docker-demo-app/blob/master/kubernetes/dashboard-admin.yaml

To access Dashboard from your local workstation you must create a secure channel to your Kubernetes cluster. Run the following command:
    
    kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$'

Now access Dashboard at:

    http://<master_machine_name>:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/

Reference Links:
    
      https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce 
      https://kubernetes.io/docs/setup/independent/install-kubeadm/
      https://github.com/kubernetes/dashboard
